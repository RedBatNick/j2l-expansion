<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEditorButton</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-110</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///standard menu variables

// editor instructions
global.instructionspage = 0;

// grid/speed boxes
selected = false;

//menu scrolling
for (i = 0; i &lt; 2; i+=1)
{
    global.scrollY[i] = 0;
    global.scrollYTarget[i] = 0;
    global.scrollMax[i] = 608;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///palette variables

// death display
global.death_count = 0

// fps display
global.PlayerFrameCounter = 0
global.SavedPlayerFrameCounter = 0

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///analysis variables

// player position
global.RecordPlayerPosition = false;
player = noone;

//cancel hints
cancelHints_Create()

//jump durations
jumpDurations_Create()

//bhop hint
bhopHint_Create()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///end step functions
var choose_player = oPlayer
if instance_exists(oRecordPlayer) {choose_player = oRecordPlayer}

//cancel hints
cancelHints_EndStep()

//jump durations
jumpDurations_EndStep(choose_player)

//bhop hint
bhopHint_EndStep(choose_player)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///scrolling functions
if (global.state == globalstate_idle &amp;&amp; global.sidebarstate != sidebar_hybrid &amp;&amp; point_in_rect(mouse_x,mouse_y,800,0,1056,608))
{
    for (i = global.sidebarstate; i &lt; global.sidebarstate+1; i+=1)
    {
        if (mouse_wheel_down())
        {
            if (global.scrollYTarget[i] &lt; global.scrollMax[i])
                global.scrollYTarget[i] += 64
            else { global.scrollYTarget[i] = global.scrollMax[i]; }
        }
        else if (mouse_wheel_up())
        {
            if (global.scrollYTarget[i] &gt; 0)
                global.scrollYTarget[i] -= 64
            else { global.scrollYTarget[i] = 0; }
        }
    
        global.scrollY[i] = lerp(global.scrollY[i],global.scrollYTarget[i],0.25);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initial setup
if global.hidesidebar exit
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>palette</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///grid overlay size
/*if global.sidebarstate != sidebar_analysis
{
    var xx = 808
    var yy = 336
    var w = 112
    var h = 32
    var droph = 75
    
    comboBoxButton(xx,yy,w,h,droph,'Snap: '+string(oEdit.snap),sMenuGrid)
    
    if selected {
        drawButton(xx,yy+h-1,w,droph,false)
        draw_set_color(global.color_button)
        draw_line(xx,yy+h-1,xx+w-2,yy+h-1)
    }
    
    var bx = xx
    var by = yy+h-1
    var bw = 38
    var bh = 38
    var dx = 37
    
    var gridsnap = array_create(5);
    gridsnap[0] = 32;
    gridsnap[1] = 16;
    gridsnap[2] = 8;
    gridsnap[3] = 1;
    gridsnap[4] = 'other [ '+scrGetKeybind(global.controls[KEY.GRID_SNAP, 0])+' ]';
    for (i = 0; i &lt; 5; i+=1)
    {
        if (i != 4)
        {
            if selected and menuButton(bx,by,bw,bh,string(gridsnap[i]),true,false) {
                oEdit.snap = gridsnap[i];
                saveConfig()
                selected = false
                global.comboboxselected = false
            }
        }
        else
        {
            if (selected and menuButton(bx,by,bw*2-1,bh,string(gridsnap[i]),true,false)
            and global.state != globalstate_input) {
                inputOverlay(input_textbox,inputCallback_GridCustom,'Grid snap (was '+string(oEdit.snap)+')')
            }
        }
        
        if (i != 2) {
            bx += dx;
        } else {
            bx -= dx*2;
            by += dx;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///room speed toggle
/*if global.sidebarstate != sidebar_analysis
{
    var xx = 936
    var yy = 336
    var w = 112
    var h = 32
    var droph = 75
    
    comboBoxButton(xx,yy,w,h,droph,'Speed: '+string(room_speed),sMenuSpeed)
    
    if selected {
        drawButton(xx,yy+h-1,w,droph,false)
        draw_set_color(global.color_button)
        draw_line(xx,yy+h-1,xx+w-2,yy+h-1)
    }
    
    var bx = xx
    var by = yy+h-1
    var bw = 38
    var bh = 38
    var dx = 37
    
    var roomspd = array_create(5);
    roomspd[0] = 50;
    roomspd[1] = 25;
    roomspd[2] = 10;
    roomspd[3] = 100;
    roomspd[4] = 'other [ '+scrGetKeybind(global.controls[KEY.ROOM_SPEED, 0])+' ]';
    for (i = 0; i &lt; 5; i+=1)
    {    
        if (i != 4)
        {
            if selected and menuButton(bx,by,bw,bh,string(roomspd[i]),true,false) {
                room_speed = roomspd[i]
                selected = false
                global.comboboxselected = false
            }
        }
        else
        {
            if (selected and menuButton(bx,by,bw*2-1,bh,string(roomspd[i]),true,false)
            and global.state != globalstate_input) {
                inputOverlay(input_textbox,inputCallback_SpeedCustom,'Room speed (was '+string(room_speed)+')')
            }
        }
        
        if (i != 2) {
            bx += dx;
        } else {
            bx -= dx*2;
            by += dx;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>analysis</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///death display
if global.sidebarstate != sidebar_palette
{
    var xx = 808
    var yy = 376
    
    if global.sidebarstate == sidebar_analysis {
        yy = 48-global.scrollY[1];
    }
    
    var w = 136
    var h = 32
    
    drawButton(xx,yy,w,h,false)
    fontSetup(font_small, c_black, fa_left, fa_center, 1)
    draw_text(xx+5, yy+16, 'Deaths: '+string(global.death_count))
    
    var buttons_active = global.state == globalstate_idle and not global.comboboxselected
    var xo = 92
    if menuButton(xx+xo,yy,w-xo,32,'Reset',buttons_active,false) {
        global.death_count = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///fps display
if global.sidebarstate != sidebar_palette
{
    var xx = 952
    var yy = 376
    
    if global.sidebarstate == sidebar_analysis {
        yy = 48-global.scrollY[1];
    }
    
    var w = 96
    var h = 32
    drawButton(xx,yy,w,h,false)
    fontSetup(font_small, c_black, fa_left, fa_center, 1)
    draw_text(xx+12, yy+16, 'FPS: '+string(fps))
    if global.FrameCounterOn = true or global.record == 1 or global.record == 2 {
    draw_text(xx+70, yy+16, string(global.PlayerFrameCounter)) }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cancel hints
var xx = 952
var yy = 416

if global.sidebarstate == sidebar_analysis {
    yy = 176-global.scrollY[1];
}

if global.sidebarstate != sidebar_palette {
    drawButton(xx,yy,96,80,false)
    drawHint(xx,yy,96,'Cancel',jc_duration,jc_show)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///bhop hint
var xx = 952
var yy = 504
var h = 64

if global.sidebarstate == sidebar_analysis {
    yy = 264-global.scrollY[1];

    if global.sidebarlevel == 1 {
        h = 96
    }    
}

if global.sidebarstate != sidebar_palette {
    drawButton(xx,yy,96,h,false)
    drawHint(xx,yy,96,'Bhop',bhop_offset,bhop_show)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///player position
if global.sidebarstate != sidebar_palette
{
    var xx = 808
    var yy = 416
    var w = 136
    var char = 9
    
    if global.sidebarstate == sidebar_analysis {
        yy = 88-global.scrollY[1];
        w = 240
    }
    else
    {
        if global.sidebarlevel == 1 {
            w = 240
        }
    }
        
    drawButton(xx,yy,w,80,false)
    fontSetup(font_small,c_black,fa_left,fa_top,1)
    
    if (instance_exists(oRecordPlayer) or instance_exists(oRecordPlayerCopy)) and global.RecordPlayerPosition = true 
    {
        if instance_exists(oRecordPlayer) {
            player = oRecordPlayer;
        }
        else if instance_exists(oRecordPlayerCopy) {
            player = oRecordPlayerCopy;
        }
    } 
    else if instance_exists(oPlayer) or instance_exists(oPlayerCopy) 
    {
        if instance_exists(oPlayer) {
            player = oPlayer;
        }
        else if instance_exists(oPlayerCopy) {
            player = oPlayerCopy;
        }
    }
    
    var text = array_create(3);
    text[0] = 'Align    ';
    text[1] = 'X   ';
    text[2] = 'Y   ';
    if (player != noone and instance_exists(player))
    {
        var align = player.x mod 3;
        var ypos = player.y;
        var xpos = player.x;
        
        var xstr = xpos
        var ystr = ypos
        if global.sidebarlevel == 1 {
            xstr = string_format(xpos,3,char);
            ystr = string_format(ypos,3,char);
        }
        
        text[0] += string(align);
        text[1] += string(xstr);
        text[2] += string(ystr);
    }
    
    
    var yy2 = yy+5
    var dy = 20
    var xx2 = xx+7
    
    for (i = 0; i &lt; 3; i+=1)
    {
        draw_text(xx2,yy2+5,text[i]);
        yy2+=dy;
    }
    
    var buttons_active = global.state == globalstate_idle and not global.comboboxselected
    var buttonw = 24
    var buttonh = 12
    var buttonx = xx+136-buttonw
    var buttony = yy
    
    if global.sidebarstate == sidebar_hybrid {
        if menuButton(buttonx,buttony,buttonw,buttonh,'',buttons_active,false) {
            global.sidebarlevel = not global.sidebarlevel
            saveConfig()
        }
    }
    
    if menuButton(x,buttony,buttonw,buttonh,'',buttons_active,false) { 
        global.RecordPlayerPosition = not global.RecordPlayerPosition
    }
    
    fontSetup(font_small,c_black,fa_center,fa_center,1)
    if global.sidebarstate == sidebar_hybrid {
        draw_text(buttonx+buttonw/2,buttony+buttonh/2-5,'. . .')
        draw_text(buttonx+buttonw/2-1,buttony+buttonh/2-5,'. . .')
    }
    draw_text(x+buttonw/2,buttony+buttonh/2-5,'. . .')
    draw_text(x+buttonw/2-1,buttony+buttonh/2-5,'. . .')
    
    /*if global.playery _extended {
        var bx = x+140
        var by = y+22
        var bw = 32
        var bh = 24
        if menuButton(bx,by,bw,bh,'- .5',-100,buttons_active,false) {
            nudgePlayerHalf(-1)
        }
        if menuButton(bx+bw+8,by,bw,bh,'+ .5',-100,buttons_active,false) {
            nudgePlayerHalf(1)
        }
    }*/
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///player speed (analysis only)
if global.sidebarstate == sidebar_analysis
{
    var xx = 808
    var yy = 176-global.scrollY[1];//416
    var w = 136
    var char = 9
    
    drawButton(xx,yy,w,80,false)
    fontSetup(font_small,c_black,fa_left,fa_top,1)
    
    if (instance_exists(oRecordPlayer) or instance_exists(oRecordPlayerCopy)) and global.RecordPlayerPosition = true 
    {
        if instance_exists(oRecordPlayer) {
            player = oRecordPlayer;
        }
        else if instance_exists(oRecordPlayerCopy) {
            player = oRecordPlayerCopy;
        }
    } 
    else if instance_exists(oPlayer) or instance_exists(oPlayerCopy) 
    {
        if instance_exists(oPlayer) {
            player = oPlayer;
        }
        else if instance_exists(oPlayerCopy) {
            player = oPlayerCopy;
        }
    }
    
    var text = array_create(3);
    text[0] = 'Gravity    ';
    text[1] = 'H   ';
    text[2] = 'V   ';
    if (player != noone and instance_exists(player))
    {
        var grav = player.gravity; 
        var vspd = player.vspeed;
        var hspd = player.hspeed;
        
        var hstr = hspd
        var vstr = vspd
        if global.sidebarlevel == 1 {
            hstr = string_format(hspd,2,char);
            vstr = string_format(vspd,2,char);
        }

        text[0] += string(grav);
        text[1] += string(hstr);
        text[2] += string(vstr);
    }
    
    
    var yy2 = yy+5
    var dy = 20
    var xx2 = xx+7
    
    for (i = 0; i &lt; 3; i+=1)
    {
        draw_text(xx2,yy2+5,text[i]);
        yy2+=dy;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///jump durations
if global.sidebarstate != sidebar_palette
{
    var xx = 808
    var yy = 504
    
    if global.sidebarstate == sidebar_analysis
        yy = 264-global.scrollY[1];
        
    var xo = 8
    var yo = 5
    var dy = 20
    var w = 136
    var h = 96
    drawButton(xx,yy,w,h,false)
    jumpDurations_Draw(xx+xo,yy+yo,dy)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>overlay</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///overlay setup
if (global.sidebarstate != sidebar_hybrid)
{
    var xx = 800;
    var yy = 0;
    var w = 256;
    var h = 44;
    
    
    for (i = 0; i &lt; 2; i+=1)
    {
        if (i = 1) 
        { 
            yy = 571;//564
        }
        draw_sprite_part_ext(sSidebar,0,0,yy,w,h,xx,yy,1,1,c_white,1)
        draw_line(xx,yy+(h-(i*44)),xx+w,yy+(h-(i*44)))
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///editor instructions
var xx = 808
var yy = 8
var enabled = global.state == globalstate_idle and not global.comboboxselected
if menuButtonToggle(xx,yy,96,32,enabled,false,
'Hide','Instructions',global.editorinstructions) {
    global.editorinstructions = not global.editorinstructions
    saveConfig()
}

if global.editorinstructions {
    var xx = 565
    var yy = 5
    var dy = 25
    var dx = 88
    var h = 432
    var buttons_active = global.state == globalstate_idle and not global.comboboxselected
    if menuButton(xx+205,h,30,12,'',buttons_active,false) {
        global.instructionspage += 1
        if global.instructionspage &gt; 2 global.instructionspage = 0
    }
    
    fontSetup(font_small,c_black,fa_center,fa_center,1)
    draw_text(xx+220,h,'. . .')
    draw_text(xx+220,h,'. . .')
    
    draw_sprite_ext(sPopup,0,xx-12,0,(800-(xx-12))/sprite_get_width(sPopup),(h-0)/sprite_get_height(sPopup),0,c_white,0.9)
    fontSetup(font_small,c_black,fa_left,fa_top,1)
    draw_rectangle(xx-12,-1,800,h,true)

    switch global.instructionspage {
        case 0: // default keybinds
        var maxarray = 17;
        var button = array_create(maxarray);
        button[0] = 'L Click'
        button[1] = 'R Click'
        button[2] = 'M Click, Space'
        button[3] = 'Ctrl'
        button[4] = 'Alt'
        button[5] = 'Ctrl + Z'
        button[6] = 'Ctrl + Y'
        button[7] = '[ '+scrGetKeybind(global.controls[KEY.SAVE_PLACE, 0])+' ]';//'S'
        button[8] = '[ '+scrGetKeybind(global.controls[KEY.MOVE_PLACE, 0])+' ]';//'W'
        
        button[9] = '[ '+scrGetKeybind(global.controls[KEY.ALIGN_LEFT, 0])+' ]' 
        +' / '+'[ '+scrGetKeybind(global.controls[KEY.NUDGE_LEFT, 0])+' ]' //'A/N'
        
        button[10] = '[ '+scrGetKeybind(global.controls[KEY.ALIGN_RIGHT, 0])+' ]' 
        +' / '+'[ '+scrGetKeybind(global.controls[KEY.NUDGE_RIGHT, 0])+' ]'//'D/M'
        
        button[11] = '[ '+scrGetKeybind(global.controls[KEY.V_ALIGN, 0])+' ]';//'V'
        button[12] = '[ '+scrGetKeybind(global.controls[KEY.H_ALIGN, 0])+' ]';//'H'
        button[13] = '0...9'
        button[14] = 'M Wheel'
        button[15] = 'X, C'
        button[16] = 'B'
        
        var action = array_create(maxarray);
        action[0] = 'Place Object'
        action[1] = 'Remove Object'
        action[2] = 'Move Object'
        action[3] = 'Select'
        action[4] = 'Edit Code'
        action[5] = 'Undo'
        action[6] = 'Redo'
        action[7] = 'Save'
        action[8] = 'Move Kid'
        action[9] = 'Nudge Kid Left'
        action[10] = 'Nudge Kid Right'
        action[11] = 'Set Valign'
        action[12] = 'Set Halign'
        action[13] = 'Select Object'
        action[14] = 'Change Object'
        action[15] = 'Zoom In/Out'
        action[16] = 'Ball'
        
        for (i = 0; i &lt; maxarray; i+=1)
        {
            draw_set_halign(fa_left)
            draw_text(xx,yy,button[i])
            draw_set_halign(fa_right)
            draw_text(xx+dx*2.5,yy,action[i])
            yy += dy
        } break
        
        case 1: // TAS/recording keybinds
        var maxarray = 13;
        var button = array_create(maxarray);
        button[0] = 'TAS/Recording Controls'
        button[1] = 'Enter+F5-12'
        button[2] = 'F5-12'
        button[3] = 'F1'
        button[4] = 'Enter+F1'
        button[5] = 'Space'
        button[6] = 'Enter+1'
        button[7] = 'Enter+2'
        button[8] = 'Enter+Space'
        button[9] = 'J'
        button[10] = 'K'
        button[11] = 'U, I'
        button[12] = 'O, P'
        
        var action = array_create(maxarray);
        action[0] = ''
        action[1] = 'Create Save State'
        action[2] = 'Load Save State'
        action[3] = 'Frame Advance'
        action[4] = 'Rewind'
        action[5] = 'Unpause'
        action[6] = 'Recording FA'
        action[7] = 'Recording Rewind'
        action[8] = 'Recording Unpause'
        action[9] = 'Jump'
        action[10] = 'Release Jump'
        action[11] = 'Nudge Kid X'
        action[12] = 'Vine Let Go'
        
        for (i = 0; i &lt; maxarray; i+=1)
        {
            draw_set_halign(fa_left)
            draw_text(xx,yy,button[i])
            draw_set_halign(fa_right)
            draw_text(xx+dx*2.5,yy,action[i])
            yy += dy
        } break
    }
 }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///value tracker (analysis only)
if global.sidebarstate == sidebar_analysis
{
    var xx = 912
    var yy = 8
    
    var sprite = sPlayerIdle
    if global.RecordPlayerPosition sprite = sMenuRecord
    var enabled = global.state == globalstate_idle and not global.comboboxselected
    if menuButtonToggle(xx,yy,32,32,enabled,sprite,'','',global.RecordPlayerPosition) {
        global.RecordPlayerPosition = not global.RecordPlayerPosition
        saveConfig()
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///menu (Esc) button
var xx = 952
var yy = 8
var enabled = global.state == globalstate_idle and not global.comboboxselected and not global.hidesidebar
var clicked = menuButton(xx,yy,96,32,'Menu (Esc)',enabled,false)

var escpressed = keyboard_check_pressed(vk_escape) and oMenu.steps_out_of_menu &gt; 0
    and global.state == globalstate_idle

if clicked or escpressed {
    global.state = globalstate_menu
    saveAndResetZoom()
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///analysis level (analysis only)
if global.sidebarstate == sidebar_analysis
{
    var xx = 808
    var yy = 576
    
    var enabled = global.state == globalstate_idle and not global.comboboxselected
    if menuButtonToggle(xx,yy,96,24,enabled,false,'Advanced','Standard',global.sidebarlevel) {
        global.sidebarlevel = not global.sidebarlevel
        saveConfig()
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///sidebar toggle
var xx = 952
var yy = 576

var states = array_create(3);
states[0] = 'Palette'
states[1] = 'Analysis'
states[2] = 'Hybrid'

var enabled = global.state == globalstate_idle and not global.comboboxselected
if menuButtonToggle(xx,yy,96,24,enabled,false,states[global.sidebarstate],'Palette',global.sidebarstate) {
    if keyboard_check(vk_control) { global.sidebarstate = sidebar_hybrid; }
    else { global.sidebarstate = not global.sidebarstate }
    saveConfig()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
