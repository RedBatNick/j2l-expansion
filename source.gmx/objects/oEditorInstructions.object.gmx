<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEditorButton</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-110</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.instructionspage = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.hidesidebar exit

var enabled = global.state == globalstate_idle and not global.comboboxselected
if menuButtonToggle(x,y,96,32,enabled,false,
'Hide','Instructions',global.editorinstructions) {
    global.editorinstructions = not global.editorinstructions
    saveConfig()
}

if global.editorinstructions {
    var xx = 565
    var yy = 5
    var dy = 25
    var dx = 88
    var h = 432
    var buttons_active = global.state == globalstate_idle and not global.comboboxselected
    if menuButton(xx+205,h,30,12,'',buttons_active,false) {
        global.instructionspage += 1
        if global.instructionspage &gt; 2 global.instructionspage = 0
    }
    
    fontSetup(font_small,c_black,fa_center,fa_center,1)
    draw_text(xx+220,h,'. . .')
    draw_text(xx+220,h,'. . .')
    
    draw_sprite_ext(sPopup,0,xx-12,0,(800-(xx-12))/sprite_get_width(sPopup),(h-0)/sprite_get_height(sPopup),0,c_white,0.9)
    fontSetup(font_small,c_black,fa_left,fa_top,1)
    draw_rectangle(xx-12,-1,800,h,true)

    switch global.instructionspage {
        case 0: // default keybinds
        var maxarray = 17;
        var button = array_create(maxarray);
        button[0] = 'Default Controls'
        button[1] = 'L click'
        button[2] = 'R click'
        button[3] = 'M click, Space'
        button[4] = 'Ctrl'
        button[5] = 'Alt'
        button[6] = 'Ctrl + Z'
        button[7] = 'Ctrl + Y'
        button[8] = 'S'
        button[9] = 'W'
        button[10] = 'A/N, D/M'
        button[11] = 'V'
        button[12] = 'H'
        button[13] = '0...9'
        button[14] = 'Mwheel'
        button[15] = 'X, C'
        button[16] = 'B'
        
        var action = array_create(maxarray);
        action[0] = ''
        action[1] = 'Place Object'
        action[2] = 'Remove Object'
        action[3] = 'Move Object'
        action[4] = 'Select'
        action[5] = 'Edit Code'
        action[6] = 'Undo'
        action[7] = 'Redo'
        action[8] = 'Save'
        action[9] = 'Move Kid'
        action[10] = 'Nudge Kid X'
        action[11] = 'Set Valign'
        action[12] = 'Set Halign'
        action[13] = 'Select Object'
        action[14] = 'Change Object'
        action[15] = 'Zoom In/Out'
        action[16] = 'Ball'
        
        for (i = 0; i &lt; maxarray; i+=1)
        {
            draw_set_halign(fa_left)
            draw_text(xx,yy,button[i])
            draw_set_halign(fa_right)
            draw_text(xx+dx*2.5,yy,action[i])
            yy += dy
        } break
        
        case 1: // TAS/recording keybinds
        var maxarray = 13;
        var button = array_create(maxarray);
        button[0] = 'TAS/Recording Controls'
        button[1] = 'Enter+F5-12'
        button[2] = 'F5-12'
        button[3] = 'F1'
        button[4] = 'Enter+F1'
        button[5] = 'Space'
        button[6] = 'Enter+1'
        button[7] = 'Enter+2'
        button[8] = 'Enter+Space'
        button[9] = 'J'
        button[10] = 'K'
        button[11] = 'U, I'
        button[12] = 'O, P'
        
        var action = array_create(maxarray);
        action[0] = ''
        action[1] = 'Create Save State'
        action[2] = 'Load Save State'
        action[3] = 'Frame Advance'
        action[4] = 'Rewind'
        action[5] = 'Unpause'
        action[6] = 'Recording FA'
        action[7] = 'Recording Rewind'
        action[8] = 'Recording Unpause'
        action[9] = 'Jump'
        action[10] = 'Release Jump'
        action[11] = 'Nudge Kid X'
        action[12] = 'Vine Let Go'
        
        for (i = 0; i &lt; maxarray; i+=1)
        {
            draw_set_halign(fa_left)
            draw_text(xx,yy,button[i])
            draw_set_halign(fa_right)
            draw_text(xx+dx*2.5,yy,action[i])
            yy += dy
        } break
    }
 }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
